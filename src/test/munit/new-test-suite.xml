<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="api-suite.xml" />
	<munit:test name="get-random-quote-test" doc:id="11628cd4-aa93-4f9d-949a-9e3428afca23" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Request" doc:id="4b89558b-dc35-4867-8445-41c8cc8f758c" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="cb489099-88aa-4831-a592-1fd88c8264d6" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getrandomquotetest/mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://getrandomquotetest/mock_attributes.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="e5005dac-d68c-4002-b23a-9e66304ade41" >
				<munit:payload value="#[readUrl('classpath://getrandomquotetest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getrandomquotetest/set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get-random-quote" doc:id="5b4ef069-e445-44c2-9356-cd7e8ca66e9d" name="get-random-quote"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="ba33da32-375b-4642-a57a-c0da3a40f12d" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getrandomquotetest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="b27d947c-e4cc-45bd-b932-2c607344a34c" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a69b3cac-b1f0-4639-a08e-3895371e0f03" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="ebe85268-eee6-4a43-8c18-d3cf1aa1809a" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8a6ba381-eacf-4f3b-b06d-1957b4a8109b" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>

</mule>